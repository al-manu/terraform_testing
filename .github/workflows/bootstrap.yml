# name: Bootstrap Terraform Backend

# on:
#   workflow_call:
#     inputs:
#       environment:
#         description: 'The environment to bootstrap (dev, sit, prod)'
#         required: true
#         default: 'dev'  # Default environment

# jobs:
#   bootstrap:
#     runs-on: ubuntu-latest
#     permissions:
#       id-token: write   # Required for OIDC authentication
#       contents: read    # Required for checking out the code

#     environment:
#       name: ${{ github.event.inputs.environment }}  # Dynamically select environment

#     env:
#       AWS_ROLE_ARN: ${{ secrets["AWS_" + github.event.inputs.environment | upper + "_ROLE_ARN"] }}
#       AWS_REGION: ${{ secrets.AWS_REGION }}
#       TF_VAR_TF_STATE_BUCKET: ${{ secrets["TF_STATE_BUCKET_" + github.event.inputs.environment | upper ] }}
#       TF_STATE_BUCKET_KEY: "terraform/${{ github.event.inputs.environment }}/terraform_backend_config.tfstate"

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up Terraform
#         uses: hashicorp/setup-terraform@v2
#         with:
#           terraform_version: 1.9.8

#       - name: Configure AWS credentials
#         id: aws_auth
#         uses: aws-actions/configure-aws-credentials@v3
#         with:
#           role-to-assume: ${{ secrets["AWS_" + github.event.inputs.environment | upper + "_ROLE_ARN"] }}
#           aws-region: ${{ secrets.AWS_REGION }}

#       - name: Initialize Terraform Backend
#         run: |
#           terraform init \
#             -backend-config="bucket=${{ secrets["TF_STATE_BUCKET_" + github.event.inputs.environment | upper ] }}" \
#             -backend-config="key=${{ env.TF_STATE_BUCKET_KEY }}" \
#             -backend-config="region=${{ secrets.AWS_REGION }}"

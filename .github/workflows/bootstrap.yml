name: Bootstrap Terraform Backend

on:
  workflow_call:
    inputs:
      environment:
        description: 'The environment to bootstrap (dev, sit, prod)'
        required: true
        default: 'dev'
        type: string

jobs:
  bootstrap:
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # Required for OIDC role assumption
      contents: read   # Required for checking out the code
    environment:
      name: ${{ inputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.8

      - name: Configure AWS credentials
        id: aws_auth
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Initialize Terraform Backend
        run: |
          set -e
          terraform init \
            -backend-config="bucket=${{ env.TF_STATE_BUCKET }}" \
            -backend-config="key=terraform/${{ inputs.environment }}/terraform.tfstate" \
            -backend-config="region=${{ secrets.AWS_REGION }}"


    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}  # Use the AWS region from secrets
      TF_VAR_TF_STATE_BUCKET: ${{ secrets.TF_STATE_BUCKET }}  # Common state bucket for all environments
      # Dynamically select AWS_ROLE_ARN based on environment input
      AWS_ROLE_ARN: ${{ 
        github.event.inputs.environment == 'prod' && secrets.AWS_PROD_ROLE_ARN ||
        github.event.inputs.environment == 'sit' && secrets.AWS_SIT_ROLE_ARN ||
        secrets.AWS_DEV_ROLE_ARN }} # Default to dev if no match


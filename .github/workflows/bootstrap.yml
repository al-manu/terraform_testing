name: Bootstrap Terraform State and Lock

on:
  workflow_call:  # Allows manual triggering
    inputs:
      environment:
        description: 'Environment name (dev, sit, prod)'
        required: true
        type: string



jobs:
  setup:
    runs-on: ubuntu-latest

    env:
      AWS_ROLE_ARN: ${{ secrets.AWS_DEV_ROLE_ARN }}  # Set AWS role ARN for DEV
      AWS_REGION: ${{ secrets.AWS_REGION }}  # AWS region
      # TF_VAR_TF_STATE_BUCKET: ${{ secrets.TF_STATE_BUCKET_DEV }}  # S3 bucket for state storage

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # - name: Set up AWS credentials via OIDC
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     role-to-assume: arn:aws:iam::<aws-account-id>:role/<your-oidc-role>  # IAM Role ARN
      #     role-session-name: GitHubActionsSession
      #     aws-region: ${{ secrets.AWS_REGION }}
            # Configure AWS credentials via OIDC to assume the role
      - name: Configure AWS credentials
        id: aws_auth
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}  # Use the AWS_ROLE_ARN from env
          aws-region: ${{ env.AWS_REGION }}  # Use the AWS region from env

      - name: Check if Lock File Exists in S3
        id: check_lock
        run: |
          aws s3api head-object --bucket ${{ secrets.STATE_BUCKET }} --key terraform/lock/${{ github.event.inputs.environment }}.lock || echo "No lock file found"

      - name: Fail if Lock Exists
        if: steps.check_lock.outcome == 'success'
        run: |
          echo "Terraform lock is in place. Exiting."
          exit 1  # Fail the job if lock file exists

      - name: Create Lock File in S3
        run: |
          aws s3api put-object --bucket ${{ secrets.STATE_BUCKET }} --key terraform/lock/${{ github.event.inputs.environment }}.lock

      - name: Initialize Terraform backend (dev, sit, prod)
        run: |
          terraform init -backend-config="bucket=${{ secrets.STATE_BUCKET }}" \
                         -backend-config="key=terraform/state/${{ github.event.inputs.environment }}.tfstate" \
                         -backend-config="region=${{ secrets.AWS_REGION }}"

      - name: Apply Terraform (Bootstrap)
        run: terraform apply -var-file=terraform_testing/environments/${{ github.event.inputs.environment }}.tfvars -auto-approve

      - name: Remove Lock File from S3
        if: success()
        run: |
          aws s3api delete-object --bucket ${{ secrets.STATE_BUCKET }} --key terraform/lock/${{ github.event.inputs.environment }}.lock

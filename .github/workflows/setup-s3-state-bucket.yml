name: Setup S3StatBucketfoTerraform

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'The environment to set up (dev, sit, prod, etc.)'
        required: true
        default: 'dev'

jobs:
  create-s3-bucket:
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # Required for OIDC role assumption
      contents: read   # Required for checking out the code

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up AWS credentials via OIDC to assume the role
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_DEV_ROLE_ARN }}  # Use the appropriate role for DEV (for example)
          aws-region: ${{ secrets.AWS_REGION }}  # Use the AWS region from secrets

      # Ensure S3 Bucket exists for state storage and locking
      - name: Create S3 bucket if not exists
        run: |
          BUCKET_NAME="${{ secrets.TF_STATE_BUCKET }}"  # Use the state bucket name from secrets
          STATE_FILE="terraform/${{ github.event.inputs.environment }}/dev.tfstate"  # Path to state file in S3

          # Check if the bucket exists, if not, create it
          aws s3api head-bucket --bucket $BUCKET_NAME || aws s3api create-bucket --bucket $BUCKET_NAME --region ${{ secrets.AWS_REGION }} --create-bucket-configuration LocationConstraint=${{ secrets.AWS_REGION }} || echo "Bucket already exists"
          
          # Create an empty object (state file) to initialize it
          aws s3 cp /dev/null s3://$BUCKET_NAME/$STATE_FILE
          
          echo "S3 bucket $BUCKET_NAME created (if not already) and state file initialized."

name: Deploy to Environment

on:
  push:
    branches:
      - 'feature/*'  # Trigger on any push to a feature branch

jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # Required for OIDC
      contents: read   # Required for checking out the code

    environment:
      name: ${{ github.event.pull_request.head.ref }}  # Dynamically set the environment (dev, sit, prod)

    env:
      AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      TF_VAR_TF_STATE_BUCKET: ${{ secrets.TF_STATE_BUCKET }}
      TF_VAR_TF_STATE_LOCK_TABLE: terraform-lock-${{ github.event.pull_request.head.ref }}  # Dynamically use environment name

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.8

      - name: Configure AWS credentials
        id: aws_auth
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}  # Use the secret directly
          aws-region: ${{ secrets.AWS_REGION }}  # Use the secret directly

      - name: Terraform Init
        run: |
          set -e
          terraform init \
            -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
            -backend-config="key=terraform/${{ github.event.pull_request.head.ref }}/state.tfstate" \
            -backend-config="region=${{ secrets.AWS_REGION }}" \
            -backend-config="dynamodb_table=${{ secrets.TF_STATE_LOCK_TABLE }}"  # Use environment-specific lock table

      - name: Terraform Validate
        run: |
          set -e
          terraform validate

      - name: Terraform Plan
        run: |
          set -e
          terraform plan -out=tfplan -var-file=environments/${{ github.event.pull_request.head.ref }}.tfvars  # Use environment-specific tfvars file

      - name: Terraform Apply
        run: |
          set -e
          terraform apply -auto-approve tfplan

      - name: Cleanup
        run: |
          terraform workspace select default || terraform workspace new default

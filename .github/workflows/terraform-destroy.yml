name: Destroy Terraform Resources

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Specify the environment to destroy (e.g., sit, prod, dev)'
        required: true
        default: 'sit'

jobs:
  destroy:
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.environment }}  # Dynamically use the input environment

    permissions:
      id-token: write
      contents: read

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      TF_VAR_TF_STATE_BUCKET: ${{ secrets.TF_STATE_BUCKET }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.8

      - name: Set environment-specific values
        run: |
          if [ "${{ github.event.inputs.environment }}" == "prod" ]; then
            echo "Setting PROD environment variables"
            echo "AWS_ROLE_ARN=${{ secrets.AWS_PROD_ROLE_ARN }}" >> $GITHUB_ENV
            echo "TF_VAR_TF_STATE_BUCKET=${{ secrets.PROD_TF_STATE_BUCKET }}" >> $GITHUB_ENV
          elif [ "${{ github.event.inputs.environment }}" == "sit" ]; then
            echo "Setting SIT environment variables"
            echo "AWS_ROLE_ARN=${{ secrets.AWS_SIT_ROLE_ARN }}" >> $GITHUB_ENV
            echo "TF_VAR_TF_STATE_BUCKET=${{ secrets.TF_STATE_BUCKET }}" >> $GITHUB_ENV
          elif [ "${{ github.event.inputs.environment }}" == "dev" ]; then
            echo "Setting DEV environment variables"
            echo "AWS_ROLE_ARN=${{ secrets.AWS_DEV_ROLE_ARN }}" >> $GITHUB_ENV
            echo "TF_VAR_TF_STATE_BUCKET=${{ secrets.DEV_TF_STATE_BUCKET }}" >> $GITHUB_ENV
          fi

      - name: Configure AWS credentials
        id: aws_auth
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
        env:
          AWS_ROLE_ARN: ${{ env.AWS_ROLE_ARN }}
          AWS_REGION: ${{ env.AWS_REGION }}
          TF_VAR_TF_STATE_BUCKET: ${{ env.TF_VAR_TF_STATE_BUCKET }}

      - name: Terraform Init (Destroy)
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
            -backend-config="key=terraform/${{ github.event.inputs.environment }}.tfstate" \
            -backend-config="region=${{
